openapi: 3.0.0
info:
  title: Flask App API
  description: API for managing user authentication and coin updates
  version: 1.0.0
servers:
  - url: https://xn--hrberg-wxa.net/prompt-realms
paths:
  /show-highscore:
    post:
      summary: Show the three players with the most coins
      operationId: showHighscore
      security:
        - APIKeyAuth: []
      responses:
        '200':
          description: High score returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /request-token:
    post:
      summary: Request Token for saving or loading. Must always be done before any other action as the token is required for the other actions
      operationId: requestToken
      security:
        - APIKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Token sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /authenticate:
    post:
      summary: Authenticate the user and give them a secret required to use other routes
      operationId: authenticate
      security:
        - APIKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  secret:
                    type: string
                  events:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /info:
    post:
      summary: Gets the info for the current user
      operationId: info
      security:
        - APIKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                secret:
                  type: string
      responses:
        '200':
          description: Info sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  events:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User file for found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /update-username:
    post:
      summary: Update's the users username, which is shown on the high score list. Requires a secret to use
      operationId: updateUsername
      security:
        - APIKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                secret:
                  type: string
                new_username:
                  type: string
      responses:
        '200':
          description: Username updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  events:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User file for found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /chance:
    post:
      summary: Randomize a result of an action with specific stat, difficulty and coin_potential. stat must be vigor, agility or intelligence. difficult must be 0 to 5, where 0 is mundane and 5 is almost impossible. coin_potential is the positive number of coins expected to be gained from the activity.
      operationId: chance
      security:
        - APIKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                secret:
                  type: string
                stat:
                  type: string
                difficulty:
                  type: int
                coin_potential:
                  type: int
      responses:
        '200':
          description: Result randomized successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  dice_roll:
                    type: string
                  message_for_user:
                    type: string
                  message_for_gm:
                    type: string
                  events:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User file for found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /attack:
    post:
      summary: Attempts to attack another player to take coins from them. Attacks using either vigor, agility or intelligence, defined in stat. Target is the username of whoever the user attempts to attack.
      operationId: attack
      security:
        - APIKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                secret:
                  type: string
                stat:
                  type: string
                target:
                  type: string
      responses:
        '200':
          description: Coins transferred successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  attacker_dice_roll:
                    type: int
                  target_dice_roll:
                    type: int
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User or target file for found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization